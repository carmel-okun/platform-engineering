pipeline {
    agent any

    parameters {
        choice(name: "ACTION", choices: ["createZ", "createR", "updateR", "deleteR"], description: "the action to make on route53")
        string(name: "DOMAIN_NAME", defaultValue: "www.example.com", trim: true, description: "the domain name of the DNS hosted zone")
        string(name: "RECORD_NAME", defaultValue: "None", trim: true, description: "the subdomain name of the DNS record")
        choice(name: "recordType", choices: ["A", "AAAA", "CNAME", "MX", "TXT", "PTR", "SRV", "SPF", "NAPTR", "CAA"], description: "the type of the DNS record")
        string(name: "RECORD_VALUE", defaultValue: "None", trim: true, description: "the value of the DNS record")
    }

    stages {
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/carmel-okun/platform-engineering.git']]])
            }
        }
        stage('run main.py') {
            steps {
                withAWS(credentials: 'AWS Credentials', region: 'us-east-1') {
                    sh "python3 ./boto3/main.py --resource DNS --action ${params.ACTION} --domainName ${params.DOMAIN_NAME} --recordName ${params.RECORD_NAME} --recordValue ${params.RECORD_VALUE}"
                }
            }
        }
    }
}
